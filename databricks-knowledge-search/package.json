{
  "name": "databricks-knowledge-search",
  "publisher": "company",
  "displayName": "Databricks Knowledge Search",
  "description": "Azure Databricks ナレッジベース検索ツール (LM Tools)",
  "version": "1.0.0",
  "license": "MIT",
  "repository": "https://github.com/daichiTAAA/VSCodeTool",
  "engines": {
    "vscode": "^1.100.0"
  },
  "categories": [
    "AI",
    "Chat"
  ],
  "main": "./out/extension.js",
  "activationEvents": [],
  "contributes": {
    "configuration": {
      "title": "Databricks Knowledge Search",
      "properties": {
        "databricks-knowledge-search.gatewayUrl": {
          "type": "string",
          "default": "http://localhost:8000",
          "description": "Gateway API のベースURL"
        },
        "databricks-knowledge-search.timeout": {
          "type": "number",
          "default": 30000,
          "description": "HTTP リクエストのタイムアウト (ms)。SQLの初回POSTやステータス取得の各リクエストに適用されます。"
        },
        "databricks-knowledge-search.authToken": {
          "type": "string",
          "default": "",
          "markdownDescription": "任意: Gateway API 用の Bearer トークン。企業の OAuth/SSO を使う場合は空のままにします。"
        },
        "databricks-knowledge-search.defaultWarehouseId": {
          "type": "string",
          "default": "",
          "description": "任意: dbxSql で未指定のときに使用するデフォルトの warehouse_id"
        },
        "databricks-knowledge-search.sqlMaxWaitMs": {
          "type": "number",
          "default": 90000,
          "description": "SQL 実行完了までのポーリング最大待ち時間 (ms)。waitTimeout 経過後にステータスをポーリングする合計時間の上限です。"
        }
      }
    },
    "languageModelTools": [
      {
        "name": "databricks-knowledge-search_sql",
        "toolReferenceName": "dbxSql",
        "displayName": "Databricks SQL (Hybrid)",
        "userDescription": "SQL を実行し、必要に応じて結果をフェッチ（EXTERNAL_LINKS対応）",
        "tags": ["databricks", "sql", "warehouse", "statements"],
        "modelDescription": "Executes a SQL statement on a Databricks SQL warehouse using hybrid mode (wait_timeout=10s, on_wait_timeout=CONTINUE). Handles EXTERNAL_LINKS expansion.",
        "canBeReferencedInPrompt": true,
        "icon": "$(database)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "statement": { "type": "string", "description": "SQL statement to execute" },
            "warehouseId": { "type": "string", "description": "Target Databricks SQL warehouse id" },
            "catalog": { "type": "string" },
            "schema": { "type": "string" },
            "parameters": { "type": "object", "description": "Named parameters for the statement" },
            "resultFormat": { "type": "string", "enum": ["JSON_ARRAY", "ARROW_STREAM", "CSV"], "description": "Databricks result format" },
            "disposition": { "type": "string", "enum": ["INLINE", "EXTERNAL_LINKS"], "description": "Result disposition" },
            "waitTimeout": { "type": "string", "description": "e.g. 10s" },
            "onWaitTimeout": { "type": "string", "enum": ["CONTINUE", "CANCEL"], "description": "Action when wait timeout occurs" },
            "format": { "type": "string", "enum": ["markdown", "json"], "default": "markdown" }
          },
          "required": ["statement", "warehouseId"]
        }
      },
      {
        "name": "databricks-knowledge-search_vector",
        "toolReferenceName": "dbxVectorSearch",
        "displayName": "Vector Search",
        "userDescription": "Vector Search のクエリ/ページング/スキャン/リスト",
        "tags": ["databricks", "vector", "search"],
        "modelDescription": "Runs semantic vector search queries against a configured index and lists endpoints/indexes.",
        "canBeReferencedInPrompt": true,
        "icon": "$(search)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "operation": { "type": "string", "enum": ["query", "nextPage", "scan", "listEndpoints", "getEndpoint", "listIndexes", "getIndex"], "default": "query" },
            "indexName": { "type": "string", "description": "Index name (query/scan/getIndex)" },
            "query": { "type": "string", "description": "Query text (query)" },
            "topK": { "type": "number", "default": 5 },
            "nextPageToken": { "type": "string" },
            "endpointName": { "type": "string", "description": "Endpoint name (getEndpoint)" }
          }
        }
      },
      {
        "name": "databricks-knowledge-search_serving",
        "toolReferenceName": "dbxServing",
        "displayName": "Serving Endpoints",
        "userDescription": "Serving の invoke / list / get / openapi",
        "tags": ["databricks", "serving", "inference"],
        "modelDescription": "Invokes a Databricks serving endpoint or lists/gets endpoints and OpenAPI schema.",
        "canBeReferencedInPrompt": true,
        "icon": "$(server)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "operation": { "type": "string", "enum": ["invoke", "list", "get", "openapi"], "default": "invoke" },
            "endpoint": { "type": "string", "description": "Endpoint name (invoke/get/openapi)" },
            "payload": { "type": "object", "description": "Invocation payload" }
          }
        }
      },
      {
        "name": "databricks-knowledge-search_queries",
        "toolReferenceName": "dbxQueries",
        "displayName": "SQL Queries",
        "userDescription": "保存済みクエリの取得/一覧",
        "tags": ["databricks", "sql", "queries"],
        "modelDescription": "Lists saved queries or gets a query by id from Databricks SQL.",
        "canBeReferencedInPrompt": true,
        "icon": "$(list-unordered)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "operation": { "type": "string", "enum": ["list", "get"], "default": "list" },
            "id": { "type": "string", "description": "Query id (get)" }
          }
        }
      },
      {
        "name": "databricks-knowledge-search_genie",
        "toolReferenceName": "dbxGenie",
        "displayName": "Genie",
        "userDescription": "Genie のスペース/会話/メッセージ操作",
        "tags": ["databricks", "genie", "bi", "chat"],
        "modelDescription": "Works with Genie spaces, conversations, and messages (start conversation, list spaces, create message, etc.)",
        "canBeReferencedInPrompt": true,
        "icon": "$(comment-discussion)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "operation": { "type": "string", "enum": ["listSpaces", "getSpace", "listConversations", "startConversation", "createMessage", "getMessage", "executeAttachmentQuery", "getAttachmentQueryResult"], "default": "listSpaces" },
            "spaceId": { "type": "string" },
            "conversationId": { "type": "string" },
            "messageId": { "type": "string" },
            "attachmentId": { "type": "string" },
            "title": { "type": "string", "description": "startConversation のタイトル" },
            "body": { "type": "string", "description": "createMessage の本文" },
            "payload": { "type": "object", "description": "任意の追加パラメータ" }
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -w -p ./",
    "lint": "eslint"
  },
  "dependencies": {
    "@vscode/chat-extension-utils": "^0.0.0-alpha.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.13.0",
    "@types/node": "^22",
    "@types/vscode": "^1.100.0",
    "eslint": "^9.13.0",
    "typescript": "^5.9.2"
  }
}
